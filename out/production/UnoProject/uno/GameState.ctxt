#BlueJ class context
comment0.params=
comment0.target=GameState()
comment0.text=\n\ (Blank\ constructor,\ used\ only\ during\ testing.)\n
comment1.params=game
comment1.target=GameState(Game)
comment1.text=\n\ Instantiate\ a\ new\ GameState\ object\ whose\ job\ it\ is\ to\ provide\ safe\n\ access\ to\ the\ Game\ object\ passed.\n
comment2.params=
comment2.target=int[]\ getNumCardsInHandsOfUpcomingPlayers()
comment2.text=\n\ Return\ an\ array\ of\ ints\ indicating\ the\ number\ of\ cards\ each\ player\n\ has\ remaining.\ The\ array\ is\ ordered\ so\ that\ index\ 0\ has\ the\ count\n\ for\ the\ player\ who\ (barring\ action\ cards\ that\ might\ change\ it)\ will\n\ play\ next,\ index\ 1\ the\ player\ who\ (barring\ action\ cards)\ will\ play\n\ second,\ etc.\n
comment3.params=
comment3.target=int[]\ getTotalScoreOfUpcomingPlayers()
comment3.text=\n\ Return\ an\ array\ of\ ints\ indicating\ the\ total\ overall\ score\ each\n\ player\ has.\ The\ array\ is\ ordered\ so\ that\ index\ 0\ has\ the\ count\n\ for\ the\ player\ who\ (barring\ action\ cards\ that\ might\ change\ it)\ will\n\ play\ next,\ index\ 1\ the\ player\ who\ (barring\ action\ cards)\ will\ play\n\ second,\ etc.\n
comment4.params=
comment4.target=UnoPlayer.Color[]\ getMostRecentColorCalledByUpcomingPlayers()
comment4.text=\n\ Return\ the\ color\ most\ recently\ "called"\ (after\ playing\ a\ wild)\ by\n\ each\ opponent.\ If\ a\ given\ opponent\ has\ not\ played\ a\ wild\ card\ this\n\ game,\ the\ value\ will\ be\ Color.NONE.\ The\ array\ is\ ordered\ so\ that\n\ index\ 0\ has\ the\ count\ for\ the\ player\ who\ (barring\ action\ cards\ that\n\ might\ change\ it)\ will\ play\ next,\ index\ 1\ the\ player\ who\ (barring\n\ action\ cards)\ will\ play\ second,\ etc.\n
comment5.params=
comment5.target=java.util.List\ getPlayedCards()
comment5.text=\n\ Return\ a\ list\ of\ <i>all</i>\ cards\ that\ have\ been\ played\ since\ the\n\ last\ time\ the\ deck\ was\ remixed.\ This\ allows\ players\ to\ "card\ count"\n\ if\ they\ choose.\n
numComments=6
