#BlueJ class context
comment0.params=hand\ upCard\ calledColor\ state
comment0.target=int\ play(java.util.List,\ Card,\ java.awt.Color,\ GameState)
comment0.text=\n\ play\ -\ This\ method\ is\ called\ when\ it's\ your\ turn\ and\ you\ need\ to\n\ choose\ what\ card\ to\ play.\n\n\ The\ hand\ parameter\ tells\ you\ what's\ in\ your\ hand.\ You\ can\ call\n\ getColor(),\ getRank(),\ and\ getNumber()\ on\ each\ of\ the\ cards\ it\n\ contains\ to\ see\ what\ it\ is.\ The\ color\ will\ be\ the\ color\ of\ the\ card,\n\ or\ "Color.NONE"\ if\ the\ card\ is\ a\ wild\ card.\ The\ rank\ will\ be\n\ "Rank.NUMBER"\ for\ all\ numbered\ cards,\ and\ another\ value\ (e.g.,\n\ "Rank.SKIP,"\ "Rank.REVERSE,"\ etc.)\ for\ special\ cards.\ The\ value\ of\n\ a\ card's\ "number"\ only\ has\ meaning\ if\ it\ is\ a\ number\ card.\ \n\ (Otherwise,\ it\ will\ be\ -1.)\n\n\ The\ upCard\ parameter\ works\ the\ same\ way,\ and\ tells\ you\ what\ the\ \n\ up\ card\ (in\ the\ middle\ of\ the\ table)\ is.\n\n\ The\ calledColor\ parameter\ only\ has\ meaning\ if\ the\ up\ card\ is\ a\ wild,\n\ and\ tells\ you\ what\ color\ the\ player\ who\ played\ that\ wild\ card\ called.\n\n\ Finally,\ the\ state\ parameter\ is\ a\ GameState\ object\ on\ which\ you\ can\ \n\ invoke\ methods\ if\ you\ choose\ to\ access\ certain\ detailed\ information\n\ about\ the\ game\ (like\ who\ is\ currently\ ahead,\ what\ colors\ each\ player\n\ has\ recently\ called,\ etc.)\n\n\ You\ must\ return\ a\ value\ from\ this\ method\ indicating\ which\ card\ you\n\ wish\ to\ play.\ If\ you\ return\ a\ number\ 0\ or\ greater,\ that\ means\ you\n\ want\ to\ play\ the\ card\ at\ that\ index.\ If\ you\ return\ -1,\ that\ means\n\ that\ you\ cannot\ play\ any\ of\ your\ cards\ (none\ of\ them\ are\ legal\ plays)\n\ in\ which\ case\ you\ will\ be\ forced\ to\ draw\ a\ card\ (this\ will\ happen\n\ automatically\ for\ you.)\n
comment1.params=hand
comment1.target=java.awt.Color\ callColor(java.util.List)
comment1.text=\n\ callColor\ -\ This\ method\ will\ be\ called\ when\ you\ have\ just\ played\ a\n\ wild\ card,\ and\ is\ your\ way\ of\ specifying\ which\ color\ you\ want\ to\ \n\ change\ it\ to.\n\n\ You\ must\ return\ a\ valid\ Color\ value\ from\ this\ method.\ You\ must\ not\n\ return\ the\ value\ Color.NONE\ under\ any\ circumstances.\n
comment10.params=hand\ validCards\ probabilities\ state
comment10.target=void\ evaluateCards(java.util.List,\ java.util.List,\ java.util.List,\ GameState)
comment11.params=state
comment11.target=boolean\ nextPlayerIsWinningSignificantly(GameState)
comment12.params=hand\ color
comment12.target=double\ percentageOfColorInHand(java.util.List,\ java.awt.Color)
comment13.params=hand\ validCards\ probabilities
comment13.target=int\ cardToPlay(java.util.List,\ java.util.List,\ java.util.List)
comment2.params=list
comment2.target=int\ max(double[])
comment3.params=deck
comment3.target=void\ printDeck(java.util.List)
comment4.params=o
comment4.target=void\ print(java.lang.Object)
comment5.params=o
comment5.target=void\ println(java.lang.Object)
comment6.params=s\ upCard\ myCard
comment6.target=void\ printDetails(java.lang.String,\ Card,\ Card)
comment7.params=l
comment7.target=java.lang.Object\ lastInArray(java.util.List)
comment8.params=l
comment8.target=Card\ lastCard(java.util.List)
comment9.params=validCards\ probabilities\ c
comment9.target=void\ addValidCard(java.util.List,\ java.util.List,\ Card)
numComments=14
